#!/usr/bin/env groovy

pipeline {
    agent any

    parameters {
        choice(name: 'REGION', choices: ['eu-central-1', 'eu-west-1'], description: 'Region to deploy')
        choice(name: 'ENV', choices: ['dev', 'test'], description: 'Environment to deploy')
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Terraform action')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Terraform Deploy') {
            steps {
                dir('terraform/infra') {
                    sh """
                        echo "Initializing Terraform"
                        terraform init -backend-config="key=j3-infra/${params.REGION}/${params.ENV}/terraform.tfstate" -input=false -force-copy

                        if [ "${params.ACTION}" = "apply" ]; then
                            echo "Planning Terraform apply"
                            terraform plan -var-file="${params.REGION}-${params.ENV}.tfvars" -input=false -out=tfplan
                            terraform show tfplan
                            terraform apply tfplan
                        else
                            echo "Planning Terraform destroy"
                            terraform plan -destroy -var-file="${params.REGION}-${params.ENV}.tfvars" -input=false -out=tfplan
                            terraform show tfplan
                            terraform apply tfplan
                        fi
                    """
                }
            }
        }
    }
}